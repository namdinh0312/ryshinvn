/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/drift-zoom@1.4.0/src/js/Trigger.js
 * 
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import throwIfMissing from"./util/throwIfMissing";import BoundingBox from"./BoundingBox";export default class Trigger{constructor(t={}){this._show=this._show.bind(this),this._hide=this._hide.bind(this),this._handleEntry=this._handleEntry.bind(this),this._handleMovement=this._handleMovement.bind(this);const{el:e=throwIfMissing(),zoomPane:s=throwIfMissing(),sourceAttribute:i=throwIfMissing(),handleTouch:n=throwIfMissing(),onShow:o=null,onHide:h=null,hoverDelay:l=0,touchDelay:r=0,hoverBoundingBox:u=throwIfMissing(),touchBoundingBox:a=throwIfMissing(),namespace:g=null,zoomFactor:d=throwIfMissing(),boundingBoxContainer:v=throwIfMissing()}=t;this.settings={el:e,zoomPane:s,sourceAttribute:i,handleTouch:n,onShow:o,onHide:h,hoverDelay:l,touchDelay:r,hoverBoundingBox:u,touchBoundingBox:a,namespace:g,zoomFactor:d,boundingBoxContainer:v},(this.settings.hoverBoundingBox||this.settings.touchBoundingBox)&&(this.boundingBox=new BoundingBox({namespace:this.settings.namespace,zoomFactor:this.settings.zoomFactor,containerEl:this.settings.boundingBoxContainer})),this.enabled=!0,this._bindEvents()}get isShowing(){return this.settings.zoomPane.isShowing}_preventDefault(t){t.preventDefault()}_preventDefaultAllowTouchScroll(t){this.settings.touchDelay&&this._isTouchEvent(t)&&!this.isShowing||t.preventDefault()}_isTouchEvent(t){return!!t.touches}_bindEvents(){this.settings.el.addEventListener("mouseenter",this._handleEntry,!1),this.settings.el.addEventListener("mouseleave",this._hide,!1),this.settings.el.addEventListener("mousemove",this._handleMovement,!1),this.settings.handleTouch?(this.settings.el.addEventListener("touchstart",this._handleEntry,!1),this.settings.el.addEventListener("touchend",this._hide,!1),this.settings.el.addEventListener("touchmove",this._handleMovement,!1)):(this.settings.el.addEventListener("touchstart",this._preventDefault,!1),this.settings.el.addEventListener("touchend",this._preventDefault,!1),this.settings.el.addEventListener("touchmove",this._preventDefault,!1))}_unbindEvents(){this.settings.el.removeEventListener("mouseenter",this._handleEntry,!1),this.settings.el.removeEventListener("mouseleave",this._hide,!1),this.settings.el.removeEventListener("mousemove",this._handleMovement,!1),this.settings.handleTouch?(this.settings.el.removeEventListener("touchstart",this._handleEntry,!1),this.settings.el.removeEventListener("touchend",this._hide,!1),this.settings.el.removeEventListener("touchmove",this._handleMovement,!1)):(this.settings.el.removeEventListener("touchstart",this._preventDefault,!1),this.settings.el.removeEventListener("touchend",this._preventDefault,!1),this.settings.el.removeEventListener("touchmove",this._preventDefault,!1))}_handleEntry(t){this._preventDefaultAllowTouchScroll(t),this._lastMovement=t,"mouseenter"==t.type&&this.settings.hoverDelay?this.entryTimeout=setTimeout(this._show,this.settings.hoverDelay):this.settings.touchDelay?this.entryTimeout=setTimeout(this._show,this.settings.touchDelay):this._show()}_show(){if(!this.enabled)return;const t=this.settings.onShow;if(t&&"function"==typeof t&&t(),this.settings.zoomPane.show(this.settings.el.getAttribute(this.settings.sourceAttribute),this.settings.el.clientWidth,this.settings.el.clientHeight),this._lastMovement){const t=this._lastMovement.touches;(t&&this.settings.touchBoundingBox||!t&&this.settings.hoverBoundingBox)&&this.boundingBox.show(this.settings.zoomPane.el.clientWidth,this.settings.zoomPane.el.clientHeight)}this._handleMovement()}_hide(t){t&&this._preventDefaultAllowTouchScroll(t),this._lastMovement=null,this.entryTimeout&&clearTimeout(this.entryTimeout),this.boundingBox&&this.boundingBox.hide();const e=this.settings.onHide;e&&"function"==typeof e&&e(),this.settings.zoomPane.hide()}_handleMovement(t){if(t)this._preventDefaultAllowTouchScroll(t),this._lastMovement=t;else{if(!this._lastMovement)return;t=this._lastMovement}let e,s;if(t.touches){const i=t.touches[0];e=i.clientX,s=i.clientY}else e=t.clientX,s=t.clientY;const i=this.settings.el.getBoundingClientRect(),n=e-i.left,o=s-i.top,h=n/this.settings.el.clientWidth,l=o/this.settings.el.clientHeight;this.boundingBox&&this.boundingBox.setPosition(h,l,i),this.settings.zoomPane.setPosition(h,l,i)}}
//# sourceMappingURL=/sm/f00d8faa1c6bfa40fcf97c2afe73a6727e4103bdff726fe918c234a51b0a7fb5.map