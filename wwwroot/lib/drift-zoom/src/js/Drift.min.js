/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/drift-zoom@1.4.0/src/js/Drift.js
 * 
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{isDOMElement}from"./util/dom";import injectBaseStylesheet from"./injectBaseStylesheet";import Trigger from"./Trigger";import ZoomPane from"./ZoomPane";export default class Drift{constructor(t,e={}){if(this.VERSION="1.4.0",this.triggerEl=t,this.destroy=this.destroy.bind(this),!isDOMElement(this.triggerEl))throw new TypeError("`new Drift` requires a DOM element as its first argument.");const i=e.namespace||null,n=e.showWhitespaceAtEdges||!1,o=e.containInline||!1,s=e.inlineOffsetX||0,r=e.inlineOffsetY||0,a=e.inlineContainer||document.body,h=e.sourceAttribute||"data-zoom",g=e.zoomFactor||3,l=void 0===e.paneContainer?document.body:e.paneContainer,c=e.inlinePane||375,m=!("handleTouch"in e)||!!e.handleTouch,u=e.onShow||null,d=e.onHide||null,p=!("injectBaseStyles"in e)||!!e.injectBaseStyles,f=e.hoverDelay||0,y=e.touchDelay||0,b=e.hoverBoundingBox||!1,B=e.touchBoundingBox||!1,D=e.boundingBoxContainer||document.body;if(!0!==c&&!isDOMElement(l))throw new TypeError("`paneContainer` must be a DOM element when `inlinePane !== true`");if(!isDOMElement(a))throw new TypeError("`inlineContainer` must be a DOM element");this.settings={namespace:i,showWhitespaceAtEdges:n,containInline:o,inlineOffsetX:s,inlineOffsetY:r,inlineContainer:a,sourceAttribute:h,zoomFactor:g,paneContainer:l,inlinePane:c,handleTouch:m,onShow:u,onHide:d,injectBaseStyles:p,hoverDelay:f,touchDelay:y,hoverBoundingBox:b,touchBoundingBox:B,boundingBoxContainer:D},this.settings.injectBaseStyles&&injectBaseStylesheet(),this._buildZoomPane(),this._buildTrigger()}get isShowing(){return this.zoomPane.isShowing}get zoomFactor(){return this.settings.zoomFactor}set zoomFactor(t){this.settings.zoomFactor=t,this.zoomPane.settings.zoomFactor=t,this.trigger.settings.zoomFactor=t,this.boundingBox.settings.zoomFactor=t}_buildZoomPane(){this.zoomPane=new ZoomPane({container:this.settings.paneContainer,zoomFactor:this.settings.zoomFactor,showWhitespaceAtEdges:this.settings.showWhitespaceAtEdges,containInline:this.settings.containInline,inline:this.settings.inlinePane,namespace:this.settings.namespace,inlineOffsetX:this.settings.inlineOffsetX,inlineOffsetY:this.settings.inlineOffsetY,inlineContainer:this.settings.inlineContainer})}_buildTrigger(){this.trigger=new Trigger({el:this.triggerEl,zoomPane:this.zoomPane,handleTouch:this.settings.handleTouch,onShow:this.settings.onShow,onHide:this.settings.onHide,sourceAttribute:this.settings.sourceAttribute,hoverDelay:this.settings.hoverDelay,touchDelay:this.settings.touchDelay,hoverBoundingBox:this.settings.hoverBoundingBox,touchBoundingBox:this.settings.touchBoundingBox,namespace:this.settings.namespace,zoomFactor:this.settings.zoomFactor,boundingBoxContainer:this.settings.boundingBoxContainer})}setZoomImageURL(t){this.zoomPane._setImageURL(t)}disable(){this.trigger.enabled=!1}enable(){this.trigger.enabled=!0}destroy(){this.trigger._hide(),this.trigger._unbindEvents()}}Object.defineProperty(Drift.prototype,"isShowing",{get:function(){return this.isShowing}}),Object.defineProperty(Drift.prototype,"zoomFactor",{get:function(){return this.zoomFactor},set:function(t){this.zoomFactor=t}}),Drift.prototype.setZoomImageURL=Drift.prototype.setZoomImageURL,Drift.prototype.disable=Drift.prototype.disable,Drift.prototype.enable=Drift.prototype.enable,Drift.prototype.destroy=Drift.prototype.destroy;
//# sourceMappingURL=/sm/2f04c8fd977ded038a34fdfe5a5484fa4cb2e2f9e8d7f172ac9e46bceeaf37c1.map